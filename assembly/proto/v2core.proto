syntax = "proto3";
import "koinos/options.proto";
package v2core;

/*
* Objects
*/
message str {
  string value = 1;
}
message uint32 {
  uint32 value = 1;
}
message uint64 {
  uint64 value = 1 [jstype = JS_STRING];
}
message boole {
  bool value = 1;
}
message empty_object {
}
message info {
  string name = 1;
  string symbol = 2;
  uint32 decimals = 3;
}
message config_object {  
  bytes token_a = 2 [(koinos.btype) = ADDRESS];
  bytes token_b = 3 [(koinos.btype) = ADDRESS];
  string k_last = 4;
  uint64 reserve_a = 5 [jstype = JS_STRING];
  uint64 reserve_b = 6 [jstype = JS_STRING];
  uint64 block_time = 7 [jstype = JS_STRING];
}

/*
* RPC calls
*/
message initialize_arguments {
  bytes token_a = 1 [(koinos.btype) = ADDRESS];
  bytes token_b = 2 [(koinos.btype) = ADDRESS];
}
message mint_arguments {
  bytes to = 1 [(koinos.btype) = ADDRESS];
  bytes fee = 2 [(koinos.btype) = ADDRESS];
}
message burn_arguments {
  bytes to = 1 [(koinos.btype) = ADDRESS];
  bytes fee = 2 [(koinos.btype) = ADDRESS];
}
message burn_result {
  uint64 amount_a = 1 [jstype = JS_STRING];
  uint64 amount_b = 2 [jstype = JS_STRING];
}
message swap_arguments {
  bytes to = 1 [(koinos.btype) = ADDRESS];
  uint64 amount_a = 2 [jstype = JS_STRING];
  uint64 amount_b = 3 [jstype = JS_STRING];
}
message get_reserves_arguments {}
message get_reserves_result {
  string k_last = 1;
  uint64 reserve_a = 2 [jstype = JS_STRING];
  uint64 reserve_b = 3 [jstype = JS_STRING];
  uint64 block_time = 4 [jstype = JS_STRING];
}